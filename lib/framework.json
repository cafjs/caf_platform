{
    "name": "top",
    "module" : "./platform_main",
    "description" : "Platform supervisor",
    "env" : {
        "appPublisher" : "process.env.APP_PUBLISHER||null",
        "appLocalName" : "process.env.APP_LOCAL_NAME||null",
        "appSuffix" : "process.env.APP_SUFFIX||cafjs.com",
        "synchronousInit" : "process.env.SYNCHRONOUS_INIT||false",
        "maxRetries" : "process.env.MAX_RETRIES||10",
        "retryDelay" : "process.env.RETRY_DELAY||1000",
        "leaseTimeout": "process.env.LEASE_TIMEOUT||10",
        "interval": "process.env.INTERVAL||2000",
        "longInterval": "process.env.LONG_INTERVAL||10000",
        "dieDelay": "process.env.DIE_DELAY||100",
        "maxHangRetries":  "process.env.MAX_HANG_RETRIES||20",
        "publicPath" : "process.env.PUBLIC_PATH||../../../../../public",
        "publicSharedPath" : "process.env.PUBLIC_SHARED_PATH||../public",
	"keysDir": "process.env.KEYS_DIR||null",
	"trustedPubKeyFile" : "process.env.TRUSTED_PUB_KEY_FILE||rsa_pub.pem",
	"publicKeyFile" : "process.env.PUBLIC_KEY_FILE||null",
	"privateKeyFile" : "process.env.PRIVATE_KEY_FILE||null",
	"accountsURL" : "process.env.ACCOUNTS_URL||https://root-accounts.cafjs.com",
        "redisPaaS" : "process.env.REDIS_PAAS||redis"
 
    },
    "components": [
        {
            "name": "log",
            "module": "caf_components#plug_log",
            "description": "Logger service",
            "env" : {
                "logLevel" : "DEBUG"
            }
        },
        {
            "name": "paas",
            "module": "./plug_paas",
            "description": "PaaS config service",
             "env": {
                 "paas" : "marathon",
                 "port" : "process.env.PORT0||3000",
                 "internalPort" : "process.env.DOCKER_APP_INTERNAL_PORT||-1",
                 "host" : "process.env.HOST||localhost",
                 "home": "process.env.HOME||/tmp",
                 "redis" : {
                     "port" : "process.env.REDIS_PORT_6379_TCP_PORT||-1",
                     "hostname" : "process.env.HOST||default",
                     "password" : null
                 }
             }
        },
        {
            "name": "security",
            "module": "caf_security#plug",
            "description": "Authenticates requests\n Properties: <keysDir> Directory with key material, defaults to colocated with ca_methods.js (i.e., <app_root>/lib). \n<accountsURL> External service to create tokens. \n <trustedPubKeyFile> Trusted public key to verify signed tokens. \n <privateKeyFile> Optional private key to sign tokens. \n <pubKeyFile> Optional public key for signing key. \n <allowNobodyUser> Enable the user 'nobody' to bypass authentication",
            "env" : {
                "keysDir": "$._.env.keysDir",
                "trustedPubKeyFile" : "$._.env.trustedPubKeyFile",
                "privateKeyFile": "$._.env.privateKeyFile",
                "publicKeyFile" :  "$._.env.publicKeyFile",
                "accountsURL": "$._.env.accountsURL",
                "allowNobodyUser" : false
            }
        },
        {
            "name": "cp",
            "module" : "caf_redis#plug",
            "description" : "Checkpointing service",
            "env" : {
                "nodeId": "default",
                "paas" : "$._.env.redisPaaS",
                "redis" : {
                    "password" : null,
                    "port" : "process.env.REDIS_PORT_6379_TCP_PORT||6379",
                    "hostname" : "process.env.REDIS_PORT_6379_TCP_ADDR||localhost"
                },
                "coalescing" : {
                    "interval" : 10,
                    "maxPendingUpdates" : 20
                }
            }
        },
        {
            "name": "cp2",
            "module" : "caf_redis#plug",
            "description" : "Checkpointing service (Pub/Sub channel)",
            "env" : {
                "nodeId": "default",
                "paas" : "$._.env.redisPaaS",
                "redis" : {
                    "password" : null,
                    "port" : "process.env.REDIS_PORT_6379_TCP_PORT||6379",
                    "hostname" : "process.env.REDIS_PORT_6379_TCP_ADDR||localhost"
                },
                "coalescing" : {
                    "interval" : 10,
                    "maxPendingUpdates" : 20
                }
            }
        },
        {
            "name": "sharing",
            "module": "caf_sharing#plug",
            "description": "Sharing Actors support service",
            "env" : {
                "persistService" : "cp",
                "routeService" : "cp2"
            }
        },
        {
            "name": "lease",
            "module": "./plug_lease",
            "description": "Lease service",
            "env" : {
                "leaseTimeout": "$._.env.leaseTimeout"
            }
        },
        {
            "name": "nodes",
            "module": "./plug_nodes",
            "description": "Nodes management service",
            "env" : {
                "stealthNode" : false,
                "nodesService" : "cp",
                "leaseTimeout": "$._.env.leaseTimeout",
                "allPublicNodeIds" : {
                    "publicHostname" : "process.env.PUBLIC_HOSTNAME||null",
                    "publicRangeStart" : "process.env.PUBLIC_RANGE_START||0",
                    "publicRangeEnd" : "process.env.PUBLIC_RANGE_END||100"
                }
            }
        },
        {
            "name": "registry",
            "module": "./plug_registry",
            "description": "CA registry service",
            "env" : {
                "__ca_json__" : "ca.json",
                "maxRetries" : 1,
                "retryDelay" : "$._.env.retryDelay"
            },
            "components" : [
            ]
        },
        {
            "name": "cron_lease",
            "module": "./cron_lease",
            "description": "Lease service cron",
            "env" : {
                "interval":"$._.env.interval"
            }
        },
        {
            "name": "cron_pulser",
            "module": "./cron_pulser",
            "description": "Pulser service cron",
            "env" : {
                "interval":"$._.env.interval"
            }
        },
        {
            "name": "cron_ripper",
            "module": "./cron_ripper",
            "description": "Ripper service cron",
            "env" : {
                "interval":"$._.env.longInterval"
            }
        },
        {
            "name": "cron_security",
            "module": "./cron_security",
            "description": "Security service cron",
            "env" : {
                "interval":"$._.env.interval"
            }
        },
        {
            "name": "cron_nodes",
            "module": "./cron_nodes",
            "description": "Nodes service cron",
            "env" : {
                "interval":"$._.env.interval"
            }
        },
        {
            "name": "pipeline",
            "module": "./pipeline_main",
            "description": "Message processing pipeline",
            "env" : {
                "maxRetries" :"$._.env.maxRetries",
                "retryDelay" : "$._.env.retryDelay",
                "specialMethods" : [
                    "ping"
                ]
            },
            "components": [
                {
                    "name": "compress",
                    "module": "./pipe_compress",
                    "description": "Compression of responses.",
                    "env" : {
                        "webSocketPipe": false,
                        "httpPipe" : true,
                        "path": "/"
                    }
                },
                {
                    "name": "cache",
                    "module": "./pipe_cache",
                    "description": "Cache of responses.",
                    "env" : {
                        "webSocketPipe": false,
                        "httpPipe" : true,
                        "path": "/",
                        "cacheService" : "cp"
                    }
                },

                {
                    "name": "ping",
                    "module": "./pipe_ping",
                    "description": "Liveness check",
                    "env" : {
                        "webSocketPipe": true,
                        "httpPipe" : true,
                        "path": "/ping"
                    }
                },
                {
                    "name": "bodyParser",
                    "module": "./pipe_bodyParser",
                    "description": "JSON body parser for http request",
                    "env" : {
                        "webSocketPipe": false,
                        "httpPipe" : true,
                        "path": "/ca"
                    }
                },
                {
                    "name": "security",
                    "module": "./pipe_security",
                    "description": "Authentication checks, add caf_security/plug_security to enable them.",
                    "env" : {
                        "webSocketPipe": true,
                        "httpPipe" : true,
                        "path": "/ca"
                    }
                },
                {
                    "name": "dispatcher",
                    "module": "./pipe_dispatcher",
                    "description": "CA request dispatcher",
                    "env" : {
                        "webSocketPipe": true,
                        "httpPipe" : true,
                        "path": "/ca"
                    }
                },
                {
                    "name": "redirect",
                    "module": "./pipe_redirect",
                    "description": "Redirect request to a different node",
                    "env" : {
                        "usePortRedirection" : false,
                        "webSocketPipe": true,
                        "httpPipe" : true,
                        "path": "/ca"
                    }
                },
                {
                    "name": "static1",
                    "module": "./pipe_static",
                    "description": "Web server for app static resources",
                    "env" : {
                        "webSocketPipe": false,
                        "httpPipe" : true,
                        "maxAgeMsec" : 0,
                        "path": "/",
                        "publicPath" : "$._.env.publicPath"
                    }
                },
                {
                    "name": "static2",
                    "module": "./pipe_static",
                    "description": "Web server for default static resources",
                    "env" : {
                        "webSocketPipe": false,
                        "httpPipe" : true,
                        "path": "/",
                        "maxAgeMsec" : "process.env.maxAgeMsec||3600000",
                        "publicPath" : "$._.env.publicSharedPath"
                    }
                }
            ]
        }
    ]
}
